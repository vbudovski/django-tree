name: Django CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
#      max-parallel: 4
      matrix:
        python-version:
          - "3.8"
          - "3.9"
        django-version:
          - "2.2"
          - "3.0"
          - "3.1"

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp

    env:
      DB_HOST: localhost
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      SERVER_HOSTNAME: localhost

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip version
        run: |
          python -m pip install -U pip

      - name: Upgrade django version
        run: |
          python -m pip install "Django~=${{ matrix.django-version }}.0"

      - name: Install Dependencies
        run: |
          python -m pip install -r requirements/test.txt

      - name: Lint
        run: |
          isort -c .
          flake8

      - name: Run Tests
        env:
          DB_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
        run: |
          python -m pytest tests --cov . --cov-report xml

      - name: Coverage
        uses: paambaati/codeclimate-action@v2.6.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: python -m coverage xml
          debug: false
          coverageLocations: |
            ${{github.workspace}}/coverage.xml:coverage.py
